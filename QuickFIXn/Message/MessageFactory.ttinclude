<#@ IntelliSenseLanguage processor="tangibleT4Editor" language="C#" #>
 <#manager.StartNewFile("MessageFactory.cs", "QuickFix", version);#>
namespace QuickFix.<#=version#>
{
    public class MessageFactory : IMessageFactory
    {
        public QuickFix.Message Create(string beginString, string msgType)
        {
            switch(msgType)
            {
<# foreach(var m in parser.Messages)
   {#>
                case <#=m.Name#>.MsgType: return new <#=m.Name#>();
<#}#>
            }

            return new QuickFix.Message();
        }

        public Group Create(string beginString, string msgType, int correspondingFieldID)
        {
<# foreach(var m in parser.Messages.Where(m => m.Groups.Count > 0))
   {#>
          if(QuickFix.<#=version#>.<#=m.Name#>.MsgType.Equals(msgType))
          {
              switch(correspondingFieldID)
              {
              <#=string.Join("\n\t\t\t\t\t", m.GetGroupsByTag().Select(gbt => string.Format("case QuickFix.Fields.Tags.{0}: return new QuickFix.{1}.{2}();", gbt.Item1, version, gbt.Item2)).ToArray())#>
              }
          }
<# }#>
            return null;
        }
    }
}